name: Build ANGLE with vcpkg

on:
  push:
    branches: [ 'vcpkg' ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: vcpkg-angle-${{ github.ref }}
  cancel-in-progress: false

jobs:
  angle:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Desktop
          - name: windows-x64
            os: windows-latest
            triplet: x64-windows
          - name: macos-x64
            os: macos-13  # Intel
            triplet: x64-osx
          - name: macos-arm64
            os: macos-14  # Apple Silicon
            triplet: arm64-osx
          # Android (hosted on Ubuntu builder)
          - name: android-x64
            os: ubuntu-latest
            triplet: android-x64
            android: true
          - name: android-arm64
            os: ubuntu-latest
            triplet: android-arm64
            android: true
          - name: android-arm
            os: ubuntu-latest
            triplet: android-arm
            android: true
          # iOS (Apple Silicon runner recommended)
          - name: ios-arm64
            os: macos-14
            triplet: arm64-ios
            ios: true

    env:
      VCPKG_FEATURE_FLAGS: manifests,binarycaching
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      # Pin vcpkg for reproducibility (update this commit manually as needed)
      VCPKG_COMMIT: 2025.09.17
      # Enable local binary caching directory (created later if absent)
      VCPKG_BINARY_SOURCES: files,${{ github.workspace }}/vcpkg/archives,readwrite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Clone vcpkg (pinned)
        run: |
          set -e
          if [ -d "vcpkg/.git" ]; then
            echo "vcpkg repo already present. Verifying..."
            git -C vcpkg rev-parse --is-inside-work-tree || { echo "Corrupt vcpkg directory"; exit 1; }
          else
            echo "Cloning vcpkg..."
            rm -rf vcpkg
            git clone --depth 1 https://github.com/microsoft/vcpkg.git vcpkg
          fi
          # If VCPKG_COMMIT looks like a full sha (40 hex) or a tag/date string, attempt checkout.
          if [ -n "${VCPKG_COMMIT}" ]; then
            echo "Checking out vcpkg ref: ${VCPKG_COMMIT}"
            git -C vcpkg fetch --depth 1 origin "${VCPKG_COMMIT}" || true
            git -C vcpkg checkout "${VCPKG_COMMIT}" || echo "Warning: could not checkout ${VCPKG_COMMIT}, staying on cloned head."
          fi
          echo "Active vcpkg commit:"
          git -C vcpkg rev-parse HEAD
        shell: bash

      - name: Setup Java (for Android)
        if: ${{ matrix.android }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android NDK
        if: ${{ matrix.android }}
        id: ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
          add-to-path: true

      - name: Configure Android env vars
        if: ${{ matrix.android }}
        run: |
          echo "ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        shell: bash

      - name: Prepare binary cache dir
        run: mkdir -p "$VCPKG_ROOT/archives"
        shell: bash

      - name: Cache vcpkg artifacts
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/installed
            vcpkg/buildtrees
            vcpkg/packages
            vcpkg/downloads
            vcpkg/archives
          key: vcpkg-${{ runner.os }}-${{ matrix.triplet }}-${{ env.VCPKG_COMMIT }}-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-${{ matrix.triplet }}-${{ env.VCPKG_COMMIT }}-
            vcpkg-${{ runner.os }}-${{ matrix.triplet }}-

      - name: Clone vcpkg
        run: |
          if [ ! -d "vcpkg/.git" ]; then
            echo "Cloning vcpkg repository..."
            git clone https://github.com/microsoft/vcpkg.git
          else
            echo "vcpkg already present. Skipping clone."
            git -C vcpkg status --short || true
          fi
        shell: bash

      - name: Bootstrap vcpkg (Windows)
        if: runner.os == 'Windows'
        run: .\vcpkg\bootstrap-vcpkg.bat
        shell: pwsh

      - name: Bootstrap vcpkg (Unix)
        if: runner.os != 'Windows'
        run: ./vcpkg/bootstrap-vcpkg.sh
        shell: bash

      - name: Add vcpkg to PATH
        run: |
          echo "${{ github.workspace }}/vcpkg" >> $GITHUB_PATH
        shell: bash

      - name: Display vcpkg version
        run: |
          vcpkg version
        shell: bash

      - name: Install ANGLE
        run: |
          set -e
          echo "Using vcpkg commit: $(git -C vcpkg rev-parse --short HEAD)"
          echo "Installing ANGLE for triplet ${{ matrix.triplet }}"
          if ! vcpkg install angle --triplet ${{ matrix.triplet }} --clean-after-build; then
            echo "Installation failed. Attempting to show logs..."
            find vcpkg/buildtrees -maxdepth 3 -name config.log -print -exec sed -n '1,200p' {} \; || true
            echo "Listing buildtrees directory for context:"
            find vcpkg/buildtrees -maxdepth 2 -type f -printf '%p\n' | head -n 200 || true
            exit 1
          fi
        shell: bash

      - name: List installed packages
        run: |
          vcpkg list
        shell: bash

      - name: Compress installed artifacts
        run: |
          tar -czf angle-${{ matrix.triplet }}.tar.gz -C vcpkg/installed ${{ matrix.triplet }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: angle-${{ matrix.triplet }}
          path: angle-${{ matrix.triplet }}.tar.gz
          if-no-files-found: error

      - name: Summary
        run: |
          echo "### ANGLE built for ${{ matrix.triplet }}" >> $GITHUB_STEP_SUMMARY
          echo "Installed path: vcpkg/installed/${{ matrix.triplet }}" >> $GITHUB_STEP_SUMMARY
          echo "vcpkg commit: $(git -C vcpkg rev-parse HEAD)" >> $GITHUB_STEP_SUMMARY
          ANGLE_LINE=$(vcpkg list | grep '^angle ' || true)
          if [ -n "$ANGLE_LINE" ]; then
            echo "ANGLE package: $ANGLE_LINE" >> $GITHUB_STEP_SUMMARY
          fi
          # Attempt to infer ANGLE source commit/hash from buildtrees directory naming (best-effort)
          ANGLE_SRC_DIR=$(ls -1d vcpkg/buildtrees/angle/src/* 2>/dev/null | head -n1 || true)
          if [ -n "$ANGLE_SRC_DIR" ]; then
            # Extract a probable commit hash (7-40 hex chars) from the path
            ANGLE_COMMIT=$(echo "$ANGLE_SRC_DIR" | sed -E 's/.*\/([0-9a-f]{7,40}).*/\1/' )
            if [[ "$ANGLE_COMMIT" =~ ^[0-9a-f]{7,40}$ ]]; then
              echo "ANGLE source ref: $ANGLE_COMMIT" >> $GITHUB_STEP_SUMMARY
            fi
          fi
        shell: bash

